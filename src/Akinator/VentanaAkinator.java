/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Akinator;

import javax.security.auth.callback.ConfirmationCallback;
import javax.swing.JOptionPane;

/**
 * Clase VentanaAkinator
 * Ventana con las acciones relacionadas al juego de Akinator en si.
 * @author sebas
 */
public class VentanaAkinator extends javax.swing.JFrame {
    Nodo nodo = null;
    boolean hoja = false;
    boolean si = false;
    boolean no = true;
    public static ArbolBinario arb;
    public static HashTable hash_table;
    public static archivoCsv csv;
    /**
        * Constructor de VentanaAkinator
        * @param hash_table estructura de datos Hash Table
        * @param arb estructura de datos Arbol Binario
        * @param csv archivo csv
        */
    public VentanaAkinator(ArbolBinario arb, HashTable hash_table) {
        initComponents();
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        this.hash_table= hash_table;
        this.arb= arb;
        this.csv = csv;
        yesButton.setEnabled(false);
        noButton.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        yesButton = new javax.swing.JButton();
        noButton = new javax.swing.JButton();
        comenzar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        preguntas = new javax.swing.JTextArea();
        backButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        yesButton.setBackground(new java.awt.Color(255, 102, 0));
        yesButton.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        yesButton.setText("Si");
        yesButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        yesButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        yesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesButtonActionPerformed(evt);
            }
        });
        jPanel1.add(yesButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 170, 60));

        noButton.setBackground(new java.awt.Color(255, 102, 0));
        noButton.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        noButton.setText("No");
        noButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        noButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        noButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noButtonActionPerformed(evt);
            }
        });
        jPanel1.add(noButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 240, 170, 60));

        comenzar.setBackground(new java.awt.Color(255, 102, 0));
        comenzar.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        comenzar.setText("Comenzar Ronda");
        comenzar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        comenzar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comenzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comenzarActionPerformed(evt);
            }
        });
        jPanel1.add(comenzar, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 250, 50));

        jScrollPane1.setViewportBorder(new javax.swing.border.MatteBorder(null));

        preguntas.setEditable(false);
        preguntas.setBackground(new java.awt.Color(0, 0, 0));
        preguntas.setColumns(20);
        preguntas.setFont(new java.awt.Font("Tempus Sans ITC", 0, 17)); // NOI18N
        preguntas.setForeground(new java.awt.Color(204, 204, 204));
        preguntas.setRows(5);
        preguntas.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane1.setViewportView(preguntas);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 410, 150));

        backButton.setBackground(new java.awt.Color(255, 102, 0));
        backButton.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        backButton.setText("<<<");
        backButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        backButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        jPanel1.add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 60, 30));

        exitButton.setBackground(new java.awt.Color(255, 102, 0));
        exitButton.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        exitButton.setText("x");
        exitButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        exitButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        jPanel1.add(exitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, 30, 30));

        helpButton.setBackground(new java.awt.Color(255, 102, 0));
        helpButton.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        helpButton.setText("Cómo Jugar");
        helpButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        helpButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        helpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });
        jPanel1.add(helpButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 310, 110, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Akinator/fondoAkinator.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-820, -10, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 350));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
        * Función comenzarActionPerformed
        * Comienza una ronda del juego
        */
    private void comenzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comenzarActionPerformed
        nodo = arb.getRoot();
        if (!arb.its_empty(arb.getRoot())) {
            int respuesta1 = JOptionPane.showConfirmDialog(null, "¿Deseas empezar una ronda?", "Respuesta", ConfirmationCallback.YES_NO_OPTION);
            if (respuesta1 == 0) {
                preguntas.setText("");
                preguntas.append("\n            Tu animal ... "+nodo.getInfo()+"?"+"\n");
                yesButton.setEnabled(true);
                noButton.setEnabled(true);
                comenzar.setEnabled(false);

        }else{
                preguntas.append("            Nos vemos para el proximo desafio, Adios!!!!");
            }
        }
    }//GEN-LAST:event_comenzarActionPerformed
    /**
        * Función yesButtonActionPerformed
        * Permite al usuario responder con un 'Si' a las preguntas del juego
        */
    private void yesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesButtonActionPerformed
        preguntas.append("\n                Respuesta: Si\n\n");    
        if (hoja != true) {                
                nodo = nodo.getRight(); 
                if (nodo.getRight()==null | nodo.getLeft()==null) {
                    hoja = true;
                    preguntas.append("            Tu animal es un/una ... "+nodo.getInfo()+"?"+"\n");
                }
                if (hoja!=true) {
                    preguntas.append("            Tu animal ... "+nodo.getInfo()+"?"+"\n");
                }
                
            }else{
               preguntas.append("            ¡Qué fácil!, ponlo más difícil la próxima vez"+"\n");
               yesButton.setEnabled(false);
                noButton.setEnabled(false);
                comenzar.setEnabled(true);
                nodo = arb.getRoot();
                hoja = false;
                    }
            
    }//GEN-LAST:event_yesButtonActionPerformed
    /**
        * Función noButtonActionPerformed
        * Permite al usuario responder con un 'No' a las preguntas del juego
        */
    private void noButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noButtonActionPerformed
        preguntas.append("\n                Respuesta: No\n\n");
        if (hoja != true) {                
                nodo = nodo.getLeft(); 
                if (nodo.getRight()==null | nodo.getLeft()==null) {
                    hoja = true;
                     preguntas.append("            Tu animal es un/una ... "+nodo.getInfo()+"?"+"\n");
                }
                if (hoja!=true) {
                    preguntas.append("            Tu animal ... "+nodo.getInfo()+"?"+"\n");
                }
                
        }else{
            boolean validacion1 = true;
            while (validacion1) {
                String animal = JOptionPane.showInputDialog("¿Cual era tu animal?");
                boolean validar= archivoCsv.validacion_animal(animal);
                while (validar) {                    
                    JOptionPane.showMessageDialog(null, "Ingreso inválido. el animal no puede contener números ni estar vacío");
                    animal = JOptionPane.showInputDialog("¿Cual era tu animal?");
                    validar= archivoCsv.validacion_animal(animal);
                }
                animal=archivoCsv.quitar_acentos(animal);
                animal=animal.toLowerCase();
                if (hash_table.buscar(animal) != null){
                    JOptionPane.showMessageDialog(null, "Este animal se encuentra en la base de conocimientos, es posible que no hayas respondido de manera correcta alguna pregunta.");
                    yesButton.setEnabled(false);
                    noButton.setEnabled(false);
                    comenzar.setEnabled(true);
                    preguntas.setText("");
                    nodo = arb.getRoot();
                    hoja = false;
                    validacion1 = false;
                    
                }else{
                    boolean validacion2 = true;
                    while (validacion2) {                        
                        String diferencia = JOptionPane.showInputDialog("¿Qué diferencia a un/una "+"'"+animal+"'"+" de un a un/una "  + nodo.getInfo() + "?");
                        while (diferencia==null || diferencia.isBlank() || diferencia.isEmpty() ) {                            
                            JOptionPane.showMessageDialog(null, "Ingreso inválido, la diferencia no puede estar vacía");
                            diferencia = JOptionPane.showInputDialog("¿Qué diferencia a un/una "+animal+ " de un a un/una "  + nodo.getInfo() + "?");
                        }
                        diferencia=archivoCsv.quitar_acentos(diferencia);
                        diferencia=diferencia.toLowerCase();
                        if (diferencia.isBlank() | diferencia.isEmpty()){
                            JOptionPane.showMessageDialog(null, "Por favor ingrese algo que diferencie a un/una "+"'"+animal+"'"+ " de un a un/una "  + nodo.getInfo()+".");
                            validacion2 = true;
                        }else{
                            int respuesta3 = JOptionPane.showConfirmDialog(null, "¿Si el animal fuese un/una "+"'"+animal+"'"+", cuál sería la respuesta a la pregunta: el/la "+animal+" "+diferencia+"?", "Respuesta", ConfirmationCallback.YES_NO_OPTION);
                            while (respuesta3==-1) {                                
                                JOptionPane.showMessageDialog(null, "Ingreso inválido, debe responder entre si o no");
                                respuesta3 = JOptionPane.showConfirmDialog(null, "¿Si el animal fuese un/una "+"'"+animal+"'"+", cuál sería la respuesta a la pregunta: el/la "+animal+" "+diferencia+"?", "Respuesta", ConfirmationCallback.YES_NO_OPTION);
                            }
                            if (respuesta3==0) {
                                Nodo animalviejo = new Nodo(nodo.getInfo());
                                Nodo animalnuevo = new Nodo(animal);
                                nodo.setInfo(diferencia);
                                nodo.setRight(animalnuevo);
                                nodo.setLeft(animalviejo);
                                hash_table.insertar(animal);
                                preguntas.append( "Muchas gracias! Ahora Akinator es mucho más inteligente que antes."+"\n");
                                yesButton.setEnabled(false);
                                noButton.setEnabled(false);
                                comenzar.setEnabled(true);
                                nodo = arb.getRoot();
                                hoja = false;
                                validacion1 = false;
                                validacion2 = false;
                            }else{
                                Nodo animalviejo = new Nodo(nodo.getInfo());
                                Nodo animalnuevo = new Nodo(animal);
                                nodo.setInfo(diferencia);
                                nodo.setLeft(animalnuevo);
                                nodo.setRight(animalviejo); 
                                hash_table.insertar(animal);
                                preguntas.append("            ¡Muchas gracias! Ahora Akinator es mucho más inteligente que antes."+"\n");
                                yesButton.setEnabled(false);
                                noButton.setEnabled(false);
                                comenzar.setEnabled(true);
                                nodo = arb.getRoot();
                                hoja = false;
                                validacion1 = false;
                                validacion2 = false;
                        }
                        }
                    } 
                }
            }            
        }
    }//GEN-LAST:event_noButtonActionPerformed
    /**
     * exitButtonActionPerformed
     * Finaliza del programa 
     */
    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed
    /**
     * backButtonActionPerformed
     * Vuelve a la ventana principal del programaa 
     */
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.dispose();
        new VentanaPrincipal(arb, csv, hash_table);
    }//GEN-LAST:event_backButtonActionPerformed
    /**
        * Función helpButtonActionPerformed
        * Muestra al usuario un tutorial de como se juega
        */
    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
        JOptionPane.showMessageDialog(null, "                                      REGLAS DEL JUEGO\n\n Antes  de  empezar a jugar  debes  pensar  en  un  animal y  Akinator\n intentara adivinarlo a traves de distintas preguntas a las que podras\n responder  'Si'  o  'No'.  Si  Akinator  logra  adivinar  el  animal   en   el\n que  estabas  pensando,  el  habra ganado el juego,  de  lo  contrario,\n tu habras sido el ganador.\n Para iniciar una partida presiona 'Comenzar Ronda'.\n\n                                      QUE TE DIVIERTAS!");
    }//GEN-LAST:event_helpButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaAkinator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaAkinator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaAkinator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaAkinator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaAkinator(arb, hash_table).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton comenzar;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton helpButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton noButton;
    private javax.swing.JTextArea preguntas;
    private javax.swing.JButton yesButton;
    // End of variables declaration//GEN-END:variables
}
