/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Akinator;

import javax.security.auth.callback.ConfirmationCallback;
import javax.swing.JOptionPane;

/**
 *
 * @author sebas
 */
public class VentanaAkinator extends javax.swing.JFrame {
    Node nodo = null;
    boolean hoja = false;
    boolean si = false;
    boolean no = true;
    public static BinaryTree arb;
    public static HashTable hash_table;
    public static archivoCsv csv;
    
    public VentanaAkinator(BinaryTree arb, HashTable hash_table) {
        initComponents();
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        this.hash_table= hash_table;
        this.arb= arb;
        this.csv = csv;
        yesButton.setEnabled(false);
        noButton.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        yesButton = new javax.swing.JButton();
        noButton = new javax.swing.JButton();
        comenzar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        preguntas = new javax.swing.JTextArea();
        backButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        yesButton.setText("Si");
        yesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesButtonActionPerformed(evt);
            }
        });
        jPanel1.add(yesButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 170, 60));

        noButton.setText("No");
        noButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noButtonActionPerformed(evt);
            }
        });
        jPanel1.add(noButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 240, 170, 60));

        comenzar.setText("Comenzar Ronda");
        comenzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comenzarActionPerformed(evt);
            }
        });
        jPanel1.add(comenzar, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 250, 50));

        jScrollPane1.setViewportBorder(new javax.swing.border.MatteBorder(null));

        preguntas.setEditable(false);
        preguntas.setColumns(20);
        preguntas.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        preguntas.setRows(5);
        jScrollPane1.setViewportView(preguntas);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 410, 150));

        backButton.setText("<<<");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        jPanel1.add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, -1, -1));

        exitButton.setText("x");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        jPanel1.add(exitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, -1, -1));

        helpButton.setText("Como Jugar");
        helpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });
        jPanel1.add(helpButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 310, 110, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 350));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comenzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comenzarActionPerformed
        nodo = arb.getRoot();
        if (!arb.its_empty(arb.getRoot())) {
            int respuesta1 = JOptionPane.showConfirmDialog(null, "¿Deseas empezar una ronda?", "Respuesta", ConfirmationCallback.YES_NO_OPTION);
            if (respuesta1 == 0) {
                preguntas.setText("");
                preguntas.append("\n            Tu animal ... "+nodo.get_info()+"?"+"\n");
                yesButton.setEnabled(true);
                noButton.setEnabled(true);
                comenzar.setEnabled(false);

        }else{
                preguntas.append("            Nos vemos para el proximo desafio, Adios!!!!");
            }
        }
    }//GEN-LAST:event_comenzarActionPerformed

    private void yesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesButtonActionPerformed
        preguntas.append("\n                Respuesta: Si\n\n");    
        if (hoja != true) {                
                nodo = nodo.Right_child(); 
                if (nodo.Right_child()==null | nodo.Left_child()==null) {
                    hoja = true;
                    preguntas.append("            Tu animal es un/una ... "+nodo.get_info()+"?"+"\n");
                }
                if (hoja!=true) {
                    preguntas.append("            Tu animal ... "+nodo.get_info()+"?"+"\n");
                }
                
            }else{
               preguntas.append("            ¡Qué fácil!, ponlo más difícil la próxima vez"+"\n");
               yesButton.setEnabled(false);
                noButton.setEnabled(false);
                comenzar.setEnabled(true);
                nodo = arb.root;
                hoja = false;
                    }
            
    }//GEN-LAST:event_yesButtonActionPerformed

    private void noButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noButtonActionPerformed
        preguntas.append("\n                Respuesta: No\n\n");
        if (hoja != true) {                
                nodo = nodo.Left_child(); 
                if (nodo.Right_child()==null | nodo.Left_child()==null) {
                    hoja = true;
                     preguntas.append("            Tu animal es un/una ... "+nodo.get_info()+"?"+"\n");
                }
                if (hoja!=true) {
                    preguntas.append("            Tu animal ... "+nodo.get_info()+"?"+"\n");
                }
                
        }else{
            boolean validacion1 = true;
            while (validacion1) {
                String animal = JOptionPane.showInputDialog("¿Cual era tu animal?");
                if (arb.find(arb.getRoot(), animal) != null){
                    JOptionPane.showMessageDialog(null, "Este animal se encuentra en la base de conocimientos, es posible que no hayas respondido de manera correcta alguna pregunta.");
                    yesButton.setEnabled(false);
                    noButton.setEnabled(false);
                    comenzar.setEnabled(true);
                    preguntas.setText("");
                    nodo = arb.root;
                    hoja = false;
                    validacion1 = false;
                    
                }else if(animal.isBlank() | animal.isEmpty()){
                    JOptionPane.showMessageDialog(null, "Por favor ingrese el nombre de su animal.");
                    validacion1 = true;
                }else{
                    boolean validacion2 = true;
                    while (validacion2) {                        
                        String diferencia = JOptionPane.showInputDialog("¿Qué diferencia a un/una "+animal+ " de un a un/una "  + nodo.get_info() + "?");
                        if (diferencia.isBlank() | diferencia.isEmpty()){
                            JOptionPane.showMessageDialog(null, "Por favor ingrese algo que diferencie a un/una "+animal+ " de un a un/una "  + nodo.get_info()+".");
                            validacion2 = true;
                        }else{
                            int respuesta3 = JOptionPane.showConfirmDialog(null, "¿Si el animal fuese un/una "+ animal+", cuál sería la respuesta a la pregunta?", "Respuesta", ConfirmationCallback.YES_NO_OPTION);
                            if (respuesta3==0) {
                                Node animalviejo = new Node(nodo.get_info());
                                Node animalnuevo = new Node(animal);
                                nodo.Set_info(diferencia);
                                nodo.Set_Right_child(animalnuevo);
                                nodo.Set_Left_child(animalviejo);
                                hash_table.insertar(animal);
                                JOptionPane.showMessageDialog(null, "            ¡Muchas gracias!, ahora soy mucho más inteligente que antes."+"\n");
                                yesButton.setEnabled(false);
                                noButton.setEnabled(false);
                                comenzar.setEnabled(true);
                                nodo = arb.root;
                                hoja = false;
                                validacion1 = false;
                                validacion2 = false;
                            }else{
                                Node animalviejo = new Node(nodo.get_info());
                                Node animalnuevo = new Node(animal);
                                nodo.Set_info(diferencia);
                                nodo.Set_Left_child(animalnuevo);
                                nodo.Set_Right_child(animalviejo); 
                                hash_table.insertar(animal);
                                preguntas.append("            ¡Muchas gracias!, ahora soy mucho más inteligente que antes."+"\n");
                                yesButton.setEnabled(false);
                                noButton.setEnabled(false);
                                comenzar.setEnabled(true);
                                nodo = arb.root;
                                hoja = false;
                                validacion1 = false;
                                validacion2 = false;
                        }
                        }
                    } 
                }
            }            
        }
    }//GEN-LAST:event_noButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.dispose();
        new VentanaPrincipal(arb, csv, hash_table);
    }//GEN-LAST:event_backButtonActionPerformed

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
        JOptionPane.showMessageDialog(null, "                                      REGLAS DEL JUEGO\n\n Antes  de  empezar a jugar  debes  pensar  en  un  animal y  Akinator\n intentara adivinarlo a traves de distintas preguntas a las que podras\n responder  'Si'  o  'No'.  Si  Akinator  logra  adivinar  el  animal   en   el\n que  estabas  pensando,  el  habra ganado el juego,  de  lo  contrario,\n tu habras sido el ganador.\n Para iniciar una partida presiona 'Comenzar Ronda'.\n\n                                      QUE TE DIVIERTAS!");
    }//GEN-LAST:event_helpButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaAkinator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaAkinator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaAkinator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaAkinator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaAkinator(arb, hash_table).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton comenzar;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton helpButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton noButton;
    private javax.swing.JTextArea preguntas;
    private javax.swing.JButton yesButton;
    // End of variables declaration//GEN-END:variables
}
