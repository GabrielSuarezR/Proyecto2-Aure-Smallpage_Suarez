/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Akinator;

import javax.swing.JOptionPane;

/**
 *
 * @author sebas
 */
public class VentanaCSV extends javax.swing.JFrame {
    public static HashTable hash_table;
    public static ArbolBinario arb;
    public static archivoCsv csv;
    
    
    /**
     * Creates new form VentanaCSV
     */
    public VentanaCSV(HashTable hash_table, ArbolBinario arb, archivoCsv csv) {
        initComponents();
        this.hash_table= hash_table;
        this.csv = csv;
        this.arb = arb;
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        backButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        cargarButton = new javax.swing.JButton();
        inicializarButton = new javax.swing.JButton();
        consultarAnimalButton = new javax.swing.JButton();
        guardarButton = new javax.swing.JButton();
        mostrarBDCButton = new javax.swing.JButton();
        jTextArea1 = new javax.swing.JTextArea();
        guardarPorDefectoButton = new javax.swing.JButton();
        cargarPorDefectoButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backButton.setText("<<<");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        jPanel1.add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, -1, -1));

        exitButton.setText("x");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        jPanel1.add(exitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, -1, -1));

        cargarButton.setText("Cargar archivo externo");
        cargarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarButtonActionPerformed(evt);
            }
        });
        jPanel1.add(cargarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 210, 50));

        inicializarButton.setText("Inicializar ");
        inicializarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inicializarButtonActionPerformed(evt);
            }
        });
        jPanel1.add(inicializarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 210, 50));

        consultarAnimalButton.setText("Consultar Animal");
        consultarAnimalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarAnimalButtonActionPerformed(evt);
            }
        });
        jPanel1.add(consultarAnimalButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 190, 210, 50));

        guardarButton.setText("Guardar en archivo externo");
        guardarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarButtonActionPerformed(evt);
            }
        });
        jPanel1.add(guardarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 210, 50));

        mostrarBDCButton.setText("Mostrar Base de Conocimientos");
        mostrarBDCButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarBDCButtonActionPerformed(evt);
            }
        });
        jPanel1.add(mostrarBDCButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 430, 40));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText(" *NOTA: Recuerde que al cargar un \n archivo, este debe ser de tipo \"csv\".");
        jPanel1.add(jTextArea1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 210, 40));

        guardarPorDefectoButton.setText("Guardar en archivo por defecto");
        guardarPorDefectoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarPorDefectoButtonActionPerformed(evt);
            }
        });
        jPanel1.add(guardarPorDefectoButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 130, 210, 50));

        cargarPorDefectoButton.setText("Cargar archivo por defecto");
        cargarPorDefectoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarPorDefectoButtonActionPerformed(evt);
            }
        });
        jPanel1.add(cargarPorDefectoButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, 210, 50));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 350));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.dispose();
        new VentanaPrincipal(arb, csv, hash_table);
    }//GEN-LAST:event_backButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void consultarAnimalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarAnimalButtonActionPerformed
        if ((arb == null) && (hash_table == null)) {
            
            JOptionPane.showMessageDialog(null, "Es necesario que cargue un archivo para poder consultar un animal");
        
        } else {
            
            String cadena= JOptionPane.showInputDialog("Ingrese el nombre del animal a buscar: ");
            boolean es_numero= cadena.matches("[+-]?\\d*(\\.\\d+)?");
            if (es_numero || cadena.isBlank() || cadena.isEmpty() || cadena==null) {
                JOptionPane.showMessageDialog(null, "La cadena no puede ser numérica o estar vacía");
            }else{
               cadena= archivoCsv.quitar_acentos(cadena);
               cadena= cadena.toLowerCase();
               Nodo buscado= hash_table.buscar(cadena);
                if (buscado==null) {
                    JOptionPane.showMessageDialog(null, "'"+cadena+"'"+" no se encuentra registado en la base de conocimientos");
                }else{
                    JOptionPane.showMessageDialog(null, "'" + buscado.getInfo() + "'" + " se encuentra registrado en la base de conocimientos");
                }   
            }       
        }   
    }//GEN-LAST:event_consultarAnimalButtonActionPerformed

    private void cargarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarButtonActionPerformed
        
        if ((arb == null) && (hash_table == null) ) {
            
            this.csv = new archivoCsv();
            this.arb = new ArbolBinario();
            this.hash_table= new HashTable(10111);
            String cadena=csv.abrirArchivo(arb, hash_table);
            if (cadena.equals("")) {
                arb=null;
                hash_table=null;
                return;
            }
            JOptionPane.showMessageDialog(null, "Lectura exitosa");
        } else {
            
            JOptionPane.showMessageDialog(null, "Ya existe un archivo cargado.\nSi desea cargar uno nuevo, presione 'Inicializar'.");
            
        }
    }//GEN-LAST:event_cargarButtonActionPerformed

    private void inicializarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inicializarButtonActionPerformed
    if (arb == null && hash_table == null) {
            JOptionPane.showMessageDialog(null, "Su base de conocimientos ya esta vacia.");
        } else {
            arb = null;
            hash_table = null;
            JOptionPane.showMessageDialog(null, "Su base de conocimientos fue inicializada correctamente");
        }
    }//GEN-LAST:event_inicializarButtonActionPerformed

    private void guardarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarButtonActionPerformed
        archivoCsv csvAux = new archivoCsv();
        if ((arb == null) && (hash_table == null)) {
            JOptionPane.showMessageDialog(null, "Para guardar una base de conocimientos, primero debe cargar un archivo");
        } else {
            String cadena="Pregunta, No, Si"+"\n";
            cadena=arb.archivorder(arb.getRoot(), cadena);
            csvAux.guardarArchivo(cadena);
        }

    }//GEN-LAST:event_guardarButtonActionPerformed

    private void mostrarBDCButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarBDCButtonActionPerformed
        // TODO add your handling code here:
        if ((arb == null) && (hash_table == null)) {
            JOptionPane.showMessageDialog(null, "Para mostrar una base de conocimientos, primero debe cargar un archivo");
        } else {
            //arb.Inicializar_mostrar(arb.getRoot());
        }
    }//GEN-LAST:event_mostrarBDCButtonActionPerformed

    private void guardarPorDefectoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarPorDefectoButtonActionPerformed
        
        archivoCsv csvAux = new archivoCsv();
        if ((arb == null) && (hash_table == null)) {
            JOptionPane.showMessageDialog(null, "Para guardar una base de conocimientos, primero debe cargar un archivo");
        } else {
            String cadena="Pregunta, No, Si"+"\n";
            cadena=arb.archivorder(arb.getRoot(), cadena);
            csvAux.escribirCvsPorDefecto(cadena);
        }
    }//GEN-LAST:event_guardarPorDefectoButtonActionPerformed

    private void cargarPorDefectoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarPorDefectoButtonActionPerformed
        
        if ((arb == null) && (hash_table == null) ) {
            
            this.csv = new archivoCsv();
            this.arb = new ArbolBinario();
            this.hash_table= new HashTable(10111);          
            csv.leerPorDefecto(arb, hash_table);
            
        } else {
            
            JOptionPane.showMessageDialog(null, "Ya existe un archivo cargado.\nSi desea cargar uno nuevo, presione 'Inicializar'.");
            
        }
        
    }//GEN-LAST:event_cargarPorDefectoButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaCSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaCSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaCSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaCSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaCSV(hash_table, arb, csv).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton cargarButton;
    private javax.swing.JButton cargarPorDefectoButton;
    private javax.swing.JButton consultarAnimalButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton guardarButton;
    private javax.swing.JButton guardarPorDefectoButton;
    private javax.swing.JButton inicializarButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton mostrarBDCButton;
    // End of variables declaration//GEN-END:variables
}
